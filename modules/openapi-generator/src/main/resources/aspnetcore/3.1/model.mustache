{{>partial_header}}
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Serialization;
using {{packageName}}.Converters;

{{#models}}
{{#model}}
namespace {{modelPackage}}
{ {{#isEnum}}{{>enumClass}}{{/isEnum}}{{^isEnum}}
    /// <summary>
    /// {{& description}}
    /// </summary>
    public {{#modelClassModifier}}{{modelClassModifier}} {{/modelClassModifier}}class {{classname}}
    { {{#vars}}{{#isEnum}}{{^isModel}}{{>enumClass}}{{/isModel}}{{/isEnum}}{{#items.isEnum}}{{^isModel}}{{#items}}{{>enumClass}}{{/items}}{{/isModel}}{{/items.isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{& description}}{{/description}}
        /// </summary>{{#description}}
        /// <value>{{& description}}</value>{{/description}}{{#required}}
        [Required]{{/required}}{{#pattern}}
        [RegularExpression("{{{pattern}}}")]{{/pattern}}{{#minLength}}{{#maxLength}}
        [StringLength({{maxLength}}, MinimumLength={{minLength}})]{{/maxLength}}{{/minLength}}{{#minLength}}{{^maxLength}}
        [MinLength({{minLength}})]{{/maxLength}}{{/minLength}}{{^minLength}}{{#maxLength}}
        [MaxLength({{maxLength}})]{{/maxLength}}{{/minLength}}{{#minimum}}{{#maximum}}
        [Range({{minimum}}, {{maximum}})]{{/maximum}}{{/minimum}}
        [JsonPropertyName("{{baseName}}"), Newtonsoft.Json.JsonProperty("{{baseName}}")]
        [Description("{{^description}}{{{name}}}{{/description}}{{#description}}{{& description}}{{/description}}")]
        {{#isEnum}}
        public {{{datatypeWithEnum}}}{{#isNullable}}?{{/isNullable}} {{name}} { get; set; }{{#defaultValue}} = {{{defaultValue}}};{{/defaultValue}}
        {{/isEnum}}
        {{^isEnum}}
        public {{^isPrimitiveType}}virtual {{/isPrimitiveType}}{{{dataType}}}{{^required}}{{#isPrimitiveType}}{{^isContainer}}{{^isString}}?{{/isString}}{{/isContainer}}{{/isPrimitiveType}}{{/required}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }{{#defaultValue}} = {{{defaultValue}}};{{/defaultValue}}
        {{/isEnum}}
        {{#hasMore}}
        {{/hasMore}}
        {{/vars}}{{#parent}}
        /// <summary>
        /// Additional properties of the object
        /// </summary>
        [JsonExtensionData]
        [JsonPropertyName("additionalProperties"), Newtonsoft.Json.JsonProperty("additionalProperties")]
        public {{{parent}}} AdditionalProperties { get; set; }
        {{/parent}}

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public {{#parent}}{{^isMapModel}}{{^isArrayModel}}new {{/isArrayModel}}{{/isMapModel}}{{/parent}}string ToJson()
        {
            return JsonSerializer.Serialize(this, new JsonSerializerOptions { IgnoreNullValues = true });
        }
    }
{{/isEnum}}
{{/model}}
{{/models}}
}
